pragma solidity ^0.5.0;
contract Requesting {

    uint InstitutionUnits;
    uint requestunits;
    uint PRCBalance;
    bool private options;

    constructor() public  {
        InstitutionUnits = 0;
        PRCBalance = 1000;
    }

    function ilan(uint ilangunits)public  returns(bool success) {
        requestunits = ilangunits;
        return true;
    }
   
    function requested() public view returns(uint) {
    return requestunits;
    }
   
    function InsUnits() public view returns(uint) {
    return InstitutionUnits;
    }
   
    function PRCunits() public view returns(uint) {
    return PRCBalance;
    }
 
 
    function transferFrom(uint256 value)
    private
    returns(bool){
        if (value == 1) return true;
        else return false;
    }
    
    function Approve()public{
    options = transferFrom(1);
    InstitutionUnits = InstitutionUnits + requestunits;
    PRCBalance = PRCBalance - requestunits;
    requestunits = 0;
    }

    function Disapprove()public{
    options = transferFrom(0);
    requestunits = 0;
    }
}
